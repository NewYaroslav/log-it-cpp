if(LOGIT_EMSCRIPTEN)
    add_executable(ems_console ems/console_smoke.cpp)
    target_link_libraries(ems_console PRIVATE log-it-cpp)

    add_executable(ems_async_flush ems/async_flush.cpp)
    target_link_libraries(ems_async_flush PRIVATE log-it-cpp)
else()
    file(GLOB TEST_SOURCES CONFIGURE_DEPENDS *.cpp)
    if(NOT LOGIT_WITH_GZIP)
        list(REMOVE_ITEM TEST_SOURCES ${CMAKE_CURRENT_LIST_DIR}/file_logger_gzip_compression_test.cpp)
        list(REMOVE_ITEM TEST_SOURCES ${CMAKE_CURRENT_LIST_DIR}/file_logger_external_cmd_compression_test.cpp)
    endif()
    if(NOT LOGIT_WITH_ZSTD)
        list(REMOVE_ITEM TEST_SOURCES ${CMAKE_CURRENT_LIST_DIR}/file_logger_zstd_compression_test.cpp)
    endif()
    if(NOT LOGIT_WITH_FMT)
        list(REMOVE_ITEM TEST_SOURCES ${CMAKE_CURRENT_LIST_DIR}/fmt_macros_test.cpp)
    endif()
    foreach(test_src ${TEST_SOURCES})
        get_filename_component(test_name ${test_src} NAME_WE)
        add_executable(${test_name} ${test_src})
        target_link_libraries(${test_name} PRIVATE log-it-cpp)
        add_test(NAME ${test_name} COMMAND ${test_name})
        if(test_name STREQUAL "backpressure_policy_test" OR
           test_name STREQUAL "backpressure_ordering_test")
            set_tests_properties(${test_name} PROPERTIES LABELS "tsan")
        endif()
        if(test_name STREQUAL "backpressure_ordering_spsc_test")
            if(MSVC)
                target_compile_options(${test_name} PRIVATE /ULOGIT_USE_MPSC_RING)
            else()
                target_compile_options(${test_name} PRIVATE -ULOGIT_USE_MPSC_RING)
            endif()
        endif()
    endforeach()
    add_subdirectory(odr)
endif()
